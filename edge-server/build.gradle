buildscript {	
	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

plugins {
	id 'org.springframework.boot' version "2.1.4.RELEASE"
//	id 'org.springframework.boot' version "2.0.7.RELEASE"
	id 'org.jetbrains.kotlin.jvm' version "1.3.21"
	id 'org.jetbrains.kotlin.plugin.spring' version "1.3.21"
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'com.marinho.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}

ext {
	set('springCloudVersion', 'Greenwich.SR1')
}

jar {
	baseName = "edge-server"
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

	implementation('org.springframework.boot:spring-boot-starter') {
		exclude(group: 'ch.qos.logback', module: 'logback-classic')
		exclude(group: 'org.slf4j', module: 'log4j-over-slf4j')
	}
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

task dockerImage(type: Docker) {
    def buildNumber = System.getenv('BUILD_NUMBER')

    push = Boolean.getBoolean('docker.push')

    tagVersion = buildNumber ? "${jar.baseName}-${project.version.replaceAll('-SNAPSHOT', '')}.${buildNumber}" : "${jar.baseName}-${project.version.replaceAll('-SNAPSHOT', '')}"
    registry = 'maxsuelmarinho'
    applicationName = 'microservices-example'

    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from file('src/main/docker/docker-entrypoint.sh')
            into stageDir
        }
    }
}

dockerImage.dependsOn 'assemble'